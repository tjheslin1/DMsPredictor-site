{"version":3,"sources":["simulation_form.js","serviceWorker.js","index.js"],"names":["SimulationForm","props","state","simulationName","simulationCount","focus","handleChange","bind","handlePlayerClassChange","handleSubmit","appendPlayer","appendMonster","event","target","value","type","checked","name","this","setState","index","charAt","length","document","getElementById","style","display","preventDefault","submittedPlayers","Array","from","children","filter","element","nodeName","map","playerDiv","playerOptions","stats","json","class","level","weapon","armour","offHand","skills","fighterFightingStyle","rangerFightingStyle","submittedMonsters","monsterDiv","monsterOptions","monster","body","simulations","players","monsters","require","default","newClient","invokeUrl","region","invokeApi","headers","queryParams","then","result","console","log","data","window","location","href","catch","error","message","creatures","creatureIndex","newCreatureDiv","createElement","setAttribute","input","append","playerClassSelect","onchange","e","split","forEach","playerClass","option","innerHTML","toUpperCase","substring","fighterFightingStylesSelect","fightingStyle","styleName","replace","rangerFightingStylesSelect","levelSelect","weaponSelect","armourSelect","offHandSelect","removeButton","onclick","removeCreature","appendModScore","score","select","prefix","remove","className","rel","id","onSubmit","placeholder","onChange","defaultValue","onClick","React","Component","Boolean","hostname","match","Index","exact","path","Results","useParams","undefined","simHash","apigClientFactory","apigClient","pathParams","simhashValue","JSON","stringify","Items","sim_hash","S","queryDatabase","passQueryToUrl","src","alt","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8963ecdf.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class SimulationForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      simulationName: \"\",\n      simulationCount: 50,\n      focus: \"LowestFirst\"\n    };\n\n    this.handleChange             = this.handleChange.bind(this);\n    this.handlePlayerClassChange  = this.handlePlayerClassChange.bind(this);\n    this.handleSubmit             = this.handleSubmit.bind(this);\n    this.appendPlayer             = this.appendPlayer.bind(this);\n    this.appendMonster            = this.appendMonster.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handlePlayerClassChange(event) {\n    this.handleChange(event)\n\n    const target = event.target;\n    const index = target.name.charAt(target.name.length - 1)\n\n    if (target.value === \"fighter\") {\n      document.getElementById(\"players-\" + index + \"-fighterfightingstyles\").style.display = \"inline\";\n      document.getElementById(\"players-\" + index + \"-rangerfightingstyles\").style.display = \"none\";\n    }\n    else if (target.value === \"ranger\") {\n    document.getElementById(\"players-\" + index + \"-fighterfightingstyles\").style.display = \"none\";\n      document.getElementById(\"players-\" + index + \"-rangerfightingstyles\").style.display = \"inline\";\n    } else {\n      document.getElementById(\"players-\" + index + \"-fighterfightingstyles\").style.display = \"none\";\n      document.getElementById(\"players-\" + index + \"-rangerfightingstyles\").style.display = \"none\";\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    var submittedPlayers = Array.from(document.getElementById(\"players\").children)\n    .filter(element => element.nodeName === \"DIV\")\n    .map(playerDiv => {\n      const name = 0\n      const playerClass = 1\n      const fighterFightingStyle = 2\n      const rangerFightingStyle = 3\n      const level = 4\n      const weapon = 5\n      const armour = 6\n      const offHand = 7\n\n      const str = 9\n      const dex = 10\n      const con = 11\n      const int = 12\n      const wis = 13\n      const cha = 14\n\n      var playerOptions = playerDiv.children\n\n      var stats = playerOptions[str].value + \",\" +\n      playerOptions[dex].value + \",\" +\n      playerOptions[con].value + \",\" +\n      playerOptions[int].value + \",\" +\n      playerOptions[wis].value + \",\" +\n      playerOptions[cha].value\n\n      var json = {\n        name: playerOptions[name].value,\n        class: playerOptions[playerClass].value,\n        level: playerOptions[level].value,\n        weapon: playerOptions[weapon].value,\n        armour: playerOptions[armour].value,\n        offHand: playerOptions[offHand].value,\n        stats: stats,\n        skills: \"0,0\"\n      };\n\n      if (playerOptions[playerClass].value === \"fighter\") {\n        json.fighterFightingStyle = playerOptions[fighterFightingStyle].value\n      }\n\n      if (playerOptions[playerClass].value === \"ranger\") {\n        json.rangerFightingStyle = playerOptions[rangerFightingStyle].value\n      }\n\n      return json;\n    })\n\n    var submittedMonsters = Array.from(document.getElementById(\"monsters\").children)\n    .filter(element => element.nodeName === \"DIV\")\n    .map(monsterDiv => {\n      const name = 0\n      const monsterType = 1\n\n      var monsterOptions = monsterDiv.children\n\n      return {\n        name: monsterOptions[name].value,\n        monster: monsterOptions[monsterType].value\n      };\n    })\n\n    var simulation = {\n      simulationName: this.state.simulationName,\n      simulations: this.state.simulationCount,\n      focus: this.state.focus,\n      players: submittedPlayers,\n      monsters: submittedMonsters\n    };\n\n    // https://github.com/kndt84/aws-api-gateway-client\n    var apigClientFactory = require('aws-api-gateway-client').default;\n\n    let config = {\n      invokeUrl:'https://4zoom92ov5.execute-api.eu-west-2.amazonaws.com',\n      region: 'eu-west-2'\n    }\n\n    var apigClient = apigClientFactory.newClient(config);\n\n    var pathParams = {};\n    var pathTemplate = '/prod/simulator'\n    var method = 'POST';\n    var additionalParams = {\n      headers: {},\n      queryParams: {}\n    };\n\n    var body = simulation\n\n//    console.log(\"simulation = \" + JSON.stringify(simulation))\n\n    apigClient.invokeApi(pathParams, pathTemplate, method, additionalParams, body)\n      .then(function(result){\n        console.log(result.data);\n        window.location.href = '/#/results/' + result.data.body\n      }).catch( function(error){\n        console.log(error.message);\n      });\n  }\n\n  appendPlayer(event) {\n    var playerClasses = \"barbarian,cleric,fighter,ranger,rogue,wizard\"\n    var levels = \"1,2,3,4,5\"\n    var weapons = \"shortsword,greatsword,greataxe,longbow\"\n    var armours = \"noarmour,chainshirt\"\n    var offHands = \"none,shield,shortsword\"\n    var fighterFightingStyles = \"archery,defense,dueling,great_weapon_fighting,protection,two_weapon_fighting\"\n    var rangerFightingStyles = \"archery,defense,dueling,two_weapon_fighting\"\n\n    const creatures = document.getElementById(\"players\")\n    const currentNumCreatures = creatures.children.length\n    var creatureIndex = currentNumCreatures + 1\n\n    while (document.getElementById(\"players-\" + creatureIndex)) {\n      creatureIndex++\n    }\n\n    var newCreatureDiv = document.createElement(\"div\")\n    newCreatureDiv.setAttribute('id', 'players-' + creatureIndex)\n\n    var input = document.createElement(\"input\");\n    input.setAttribute('type', 'text');\n    input.setAttribute('placeholder', 'enter player name');\n    input.setAttribute('name', 'players-' + creatureIndex + '-name');\n\n    newCreatureDiv.append(input)\n\n    var playerClassSelect = document.createElement(\"select\");\n    playerClassSelect.setAttribute('name', 'playerClass_' + creatureIndex);\n    playerClassSelect.onchange = (e) => this.handlePlayerClassChange(e);\n    playerClasses.split(',').forEach(function(playerClass) {\n      var option = document.createElement('option');\n      option.setAttribute('value', playerClass)\n      option.innerHTML = playerClass.charAt(0).toUpperCase() + playerClass.substring(1)\n\n      playerClassSelect.append(option)\n    })\n\n    var fighterFightingStylesSelect = document.createElement(\"select\");\n    fighterFightingStylesSelect.setAttribute('id', 'players-' + creatureIndex + \"-fighterfightingstyles\");\n    fighterFightingStylesSelect.setAttribute('name', 'players-' + creatureIndex + \"-fighterfightingstyles\");\n    fighterFightingStylesSelect.setAttribute('style', 'display: none;');\n    fighterFightingStyles.split(',').forEach(function(fightingStyle) {\n      var option = document.createElement('option');\n      option.setAttribute('value', fightingStyle)\n\n      var styleName = fightingStyle.charAt(0).toUpperCase() + fightingStyle.substring(1)\n      option.innerHTML = styleName.replace(/_/g, \" \")\n\n      fighterFightingStylesSelect.append(option)\n    })\n\n    var rangerFightingStylesSelect = document.createElement(\"select\");\n    rangerFightingStylesSelect.setAttribute('id', 'players-' + creatureIndex + \"-rangerfightingstyles\");\n    rangerFightingStylesSelect.setAttribute('name', 'players-' + creatureIndex + \"-rangerfightingstyles\");\n    rangerFightingStylesSelect.setAttribute('style', 'display: none;');\n    rangerFightingStyles.split(',').forEach(function(fightingStyle) {\n      var option = document.createElement('option');\n      option.setAttribute('value', fightingStyle)\n\n      var styleName = fightingStyle.charAt(0).toUpperCase() + fightingStyle.substring(1)\n      option.innerHTML = styleName.replace(/_/g, \" \")\n\n      rangerFightingStylesSelect.append(option)\n    })\n\n    var levelSelect = document.createElement(\"select\");\n    levelSelect.setAttribute('name', 'players-' + creatureIndex + \"-level\");\n    levels.split(',').forEach(function(level) {\n      var option = document.createElement('option');\n      option.setAttribute('value', level)\n      option.innerHTML = \"Level \" + level\n\n      levelSelect.append(option)\n    })\n\n    var weaponSelect = document.createElement(\"select\");\n    weaponSelect.setAttribute('name', 'players-' + creatureIndex + \"-weapon\");\n    weapons.split(',').forEach(function(weapon) {\n      var option = document.createElement('option');\n      option.setAttribute('value', weapon);\n      option.innerHTML = weapon.charAt(0).toUpperCase() + weapon.substring(1);\n\n      weaponSelect.append(option)\n    })\n\n    var armourSelect = document.createElement(\"select\");\n    armourSelect.setAttribute('name', 'players-' + creatureIndex + \"-armour\");\n    armours.split(',').forEach(function(armour) {\n      var option = document.createElement('option');\n      option.setAttribute('value', armour);\n      option.innerHTML = armour.charAt(0).toUpperCase() + armour.substring(1);\n\n      armourSelect.append(option)\n    })\n\n    var offHandSelect = document.createElement(\"select\");\n    offHandSelect.setAttribute('name', 'players-' + creatureIndex + \"-offHand\");\n    offHands.split(',').forEach(function(offHand) {\n      var option = document.createElement('option');\n      option.setAttribute('value', offHand);\n\n      if (offHand === \"none\") {\n        option.innerHTML = \"No Off Hand\";\n      }\n      else {\n        option.innerHTML = offHand.charAt(0).toUpperCase() + offHand.substring(1);\n      }\n\n      offHandSelect.append(option)\n    })\n\n    var removeButton = document.createElement(\"input\");\n    removeButton.setAttribute('type', \"button\");\n    removeButton.setAttribute('style', \"background-color: white; color: black; border: 2px solid #fd837b\");\n    removeButton.onclick = (e) => this.removeCreature(creatureIndex, \"players-\");\n    removeButton.value = \"X\"\n\n    newCreatureDiv.append(playerClassSelect)\n    newCreatureDiv.append(fighterFightingStylesSelect)\n    newCreatureDiv.append(rangerFightingStylesSelect)\n    newCreatureDiv.append(levelSelect)\n    newCreatureDiv.append(weaponSelect)\n    newCreatureDiv.append(armourSelect)\n    newCreatureDiv.append(offHandSelect)\n\n    newCreatureDiv.append(document.createElement(\"br\"))\n\n    newCreatureDiv.append(this.appendModScore(creatureIndex, \"Str\"))\n    newCreatureDiv.append(this.appendModScore(creatureIndex, \"Dex\"))\n    newCreatureDiv.append(this.appendModScore(creatureIndex, \"Con\"))\n    newCreatureDiv.append(this.appendModScore(creatureIndex, \"Int\"))\n    newCreatureDiv.append(this.appendModScore(creatureIndex, \"Wis\"))\n    newCreatureDiv.append(this.appendModScore(creatureIndex, \"Cha\"))\n\n    newCreatureDiv.append(removeButton)\n\n    creatures.append(document.createElement(\"hr\"))\n    creatures.append(newCreatureDiv)\n  }\n\n  appendModScore(creatureIndex, score) {\n    var input = document.createElement(\"input\");\n    input.setAttribute('type', 'text');\n    input.setAttribute('class', 'mod-score');\n    input.setAttribute('placeholder', score.charAt(0).toUpperCase() + score.substring(1));\n    input.setAttribute('name', 'players-' + creatureIndex + '-' + score);\n\n    return input\n  }\n\n  appendMonster(event) {\n    var monsterTypes = \"goblin,zombie,vampire,werewolf\"\n\n    const creatures = document.getElementById(\"monsters\")\n    const currentNumCreatures = creatures.children.length\n    var creatureIndex = currentNumCreatures + 1\n\n    while (document.getElementById(\"monsters-\" + creatureIndex)) {\n      creatureIndex++\n    }\n\n    var newCreatureDiv = document.createElement(\"div\")\n    newCreatureDiv.setAttribute('id', 'monsters-' + creatureIndex)\n\n    var input = document.createElement(\"input\");\n    input.setAttribute('type', 'text');\n    input.setAttribute('placeholder', 'enter monster name');\n    input.setAttribute('name', 'monsters-' + creatureIndex + '-name');\n\n    newCreatureDiv.append(input)\n\n    var select = document.createElement(\"select\");\n    select.setAttribute('name', 'monsters-' + creatureIndex + \"-monsterType\");\n\n    monsterTypes.split(',').forEach(function(monster) {\n      var option = document.createElement( 'option' );\n      option.setAttribute('value', monster)\n      option.innerHTML = monster.charAt(0).toUpperCase() + monster.substring(1)\n\n      select.append(option)\n    })\n\n    var removeButton = document.createElement(\"input\");\n    removeButton.setAttribute('type', \"button\");\n    removeButton.setAttribute('style', \"background-color: white; color: black; border: 2px solid #fd837b\");\n    removeButton.onclick = (e) => this.removeCreature(creatureIndex, \"monsters-\");\n    removeButton.value = \"X\"\n\n    newCreatureDiv.append(select)\n    newCreatureDiv.append(removeButton)\n\n    creatures.append(document.createElement(\"hr\"))\n    creatures.append(newCreatureDiv)\n  }\n\n  removeCreature(creatureIndex, prefix) {\n    document.getElementById(prefix + creatureIndex).remove()\n  }\n\n  render() {\n    return(\n      <div className=\"centered\">\n        <h3 className=\"mobile_message\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/tjheslin1/DMsPredictor\">This project</a> <i>is a work in progress! If you have any feedback, suggestions or questions please <a href=\"mailto:tjheslin1@kolabnow.com?subject=DMsPredictor-site\">email me</a>, referencing a <u>simulation results ID</u> where relevant.</i></h3>\n        <a href=\"/#/results\">Click here to query simulation results</a>\n        <br />\n        <br />\n        <form id=\"simulationForm\" onSubmit={this.handleSubmit}>\n          <label>Simulation name:</label>\n          <input type=\"text\" placeholder=\"enter name here\" name=\"simulationName\" value={this.state.simulationName} onChange={this.handleChange} />\n          <br />\n          <label>\n            Number of simulation runs:\n            <input\n              name=\"simulationCount\"\n              type=\"number\"\n              value={this.state.simulationCount}\n              onChange={this.handleChange} />\n          </label>\n          <br />\n          Choose focus strategy (monsters will follow the same strategy):<br />\n          <select name=\"focus\" value={this.state.focus} onChange={this.handleChange}>\n            <option defaultValue value=\"LowestFirst\">Lowest health first *</option>\n            <option value=\"RandomFocus\">Random **</option>\n          </select>\n          <br />\n          <label>Players:</label>\n          <br />\n          <div id=\"players\">\n            <div id=\"players-1\">\n              <input type=\"text\" placeholder=\"enter player name\" name=\"players-1-name\" />\n              <select name=\"playerClass_1\" onChange={this.handlePlayerClassChange}>\n                <option defaultValue value=\"barbarian\">Barbarian</option>\n                <option value= \"cleric\">Cleric</option>\n                <option value= \"fighter\">Fighter</option>\n                <option value= \"ranger\">Ranger</option>\n                <option value= \"rogue\">Rogue</option>\n                <option value= \"wizard\">Wizard</option>\n              </select>\n              <select id=\"players-1-fighterfightingstyles\" name=\"players-1-fighterfightingstyles\" style={{display: \"none\"}}>\n                <option defaultValue value= \"archery\">Archery</option>\n                <option value= \"defense\">Defense</option>\n                <option value= \"dueling\">Dueling</option>\n                <option value= \"great_weapon_fighting\">Great Weapon Fighting</option>\n                <option value= \"protection\">Protection</option>\n                <option value= \"two_weapon_fighting\">Two Weapon Fighting</option>\n              </select>\n              <select id=\"players-1-rangerfightingstyles\" name=\"players-1-rangerfightingstyles\" style={{display: \"none\"}}>\n                <option defaultValue value= \"archery\">Archery</option>\n                <option value= \"defense\">Defense</option>\n                <option value= \"dueling\">Dueling</option>\n                <option value= \"two_weapon_fighting\">Two Weapon Fighting</option>\n              </select>\n              <select name=\"players-1-level\">\n                <option defaultValue value=\"1\">Level 1</option>\n                <option value= \"2\">Level 2</option>\n                <option value= \"3\">Level 3</option>\n                <option value= \"4\">Level 4</option>\n                <option value= \"5\">Level 5</option>\n              </select>\n              <select name=\"players-1-weapon\">\n                <option defaultValue value=\"shortsword\">Shortsword</option>\n                <option value= \"greatsword\">Greatsword</option>\n                <option value= \"greataxe\">Greataxe</option>\n                <option value= \"longbow\">Longbow</option>\n              </select>\n              <select name=\"players-1-armour\">\n                <option defaultValue value=\"noarmour\">NoArmour</option>\n                <option value= \"chainshirt\">ChainShirt</option>\n              </select>\n              <select name=\"players-1-offHand\">\n                <option defaultValue value=\"none\">No Off Hand</option>\n                <option value=\"shield\">Shield</option>\n                <option value= \"shortsword\">Shortsword</option>\n              </select>\n              <br />\n              <input type=\"text\" className=\"mod-score\" placeholder=\"Str\" name=\"players-1-str\" />\n              <input type=\"text\" className=\"mod-score\" placeholder=\"Dex\" name=\"players-1-dex\" />\n              <input type=\"text\" className=\"mod-score\" placeholder=\"Con\" name=\"players-1-con\" />\n              <input type=\"text\" className=\"mod-score\" placeholder=\"Int\" name=\"players-1-int\" />\n              <input type=\"text\" className=\"mod-score\" placeholder=\"Wis\" name=\"players-1-wis\" />\n              <input type=\"text\" className=\"mod-score\" placeholder=\"Cha\" name=\"players-1-cha\" />\n            </div>\n          </div>\n          <div className=\"padded\"><button type=\"button\" onClick={this.appendPlayer}>Add Player</button></div>\n          <br />\n          <label className=\"padded\">Monsters:</label>\n          <div id=\"monsters\">\n            <div id=\"monsters-1\">\n              <input type=\"text\" placeholder=\"enter monster name\" name=\"monsters-1-name\" />\n              <select name=\"monsters-1-monsterType\">\n                <option defaultValue value=\"goblin\">Goblin</option>\n                <option value= \"zombie\">Zombie</option>\n                <option value= \"vampire\">Vampire</option>\n                <option value= \"werewolf\">Werewolf</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"padded\"><button type=\"button\" onClick={this.appendMonster}>Add Monster</button></div>\n          <br />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        <br />\n        <p>* to represent experienced players</p>\n        <p>** to represent inexperienced players</p>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SimulationForm from './simulation_form'\nimport * as serviceWorker from './serviceWorker';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  useParams\n} from \"react-router-dom\";\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\nexport default function Index() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <SimulationForm />\n          </Route>\n          <Route path=\"/results/:id?\">\n            <Results />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n// 208297758\n\nfunction Results() {\n  let { id } = useParams();\n\n  if (id !== null && id !== \"\" && id !== undefined) {\n    queryDatabase(id);\n\n    return (\n      <div>\n        <div className=\"centered\" >\n          <h3 className=\"mobile_message\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/tjheslin1/DMsPredictor\">This project</a> <i>is a work in progress! If you have any feedback, suggestions or questions please <a href=\"mailto:tjheslin1@kolabnow.com?subject=DMsPredictor-site\">email me</a>, referencing a <u>simulation results ID</u> where relevant.</i></h3>\n          <h3 id=\"results-header\">waiting...</h3>\n          <form id=\"simulationResults\" onSubmit={(e) => {e.preventDefault(); passQueryToUrl(document.getElementById(\"simHash\").value)}}>\n            <input id=\"simHash\" type=\"text\" placeholder=\"enter simHash\" />\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n          <a href={`/#/results/${id}`}><i>refresh {id} results</i></a>\n        </div>\n        <img className=\"gif\" src=\"https://dmspredictor-site-assets.s3.eu-west-2.amazonaws.com/roll_tiny.gif\" alt=\"rolling dice...\"/>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <div className=\"centered\" >\n          <h3 className=\"mobile_message\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/tjheslin1/DMsPredictor\">This project</a> <i>is a work in progress! If you have any feedback, suggestions or questions please <a href=\"mailto:tjheslin1@kolabnow.com?subject=DMsPredictor-site\">email me</a>, referencing a <u>simulation results ID</u> where relevant.</i></h3>\n          <h3 id=\"results-header\">Enter your simulation id:</h3>\n          <form id=\"simulationResults\" onSubmit={(e) => {e.preventDefault(); passQueryToUrl(document.getElementById(\"simHash\").value)}}>\n            <input id=\"simHash\" type=\"text\" placeholder=\"enter simHash\" />\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n          <a href='/#/results'>Refresh</a>\n          <br />\n        </div>\n        <img className=\"gif\" src=\"https://dmspredictor-site-assets.s3.eu-west-2.amazonaws.com/roll_tiny.gif\" alt=\"rolling dice...\" />\n      </div>\n    )\n  }\n}\n\nfunction passQueryToUrl(simHash) {\n  window.location.href = '/#/results/' + simHash\n}\n\nfunction queryDatabase(simHash) {\n  // https://github.com/kndt84/aws-api-gateway-client\n  var apigClientFactory = require('aws-api-gateway-client').default;\n\n  let config = {\n    invokeUrl:'https://4zoom92ov5.execute-api.eu-west-2.amazonaws.com',\n    region: 'eu-west-2'\n  }\n\n  var apigClient = apigClientFactory.newClient(config);\n\n  var pathParams = {\n    simhashValue: simHash\n  };\n\n  var pathTemplate = '/prod/query/{simhashValue}'\n  var method = 'GET';\n  var additionalParams = {\n    headers: {},\n    queryParams: {}\n  };\n\n  apigClient.invokeApi(pathParams, pathTemplate, method, additionalParams)\n    .then(function(result){\n      document.getElementById(\"results-header\").innerHTML = \"Your simulation id is: <div style=\\\"color: green\\\">\" + JSON.stringify(result.data.Items[0].sim_hash.S).replace(/\"/g, \"\") + \"</div><br/><i>make a note of it (or copy the full URL) to return to the results in the future.</i><br /><br/>Results: \"\n          + JSON.stringify(result.data.Items[0].result.S).replace(/\"/g, \"\").replace(/,/g, \" and\");\n    }).catch( function(error){\n      document.getElementById(\"results-header\").innerHTML = error.message\n      + '<br /><i style=\"color: red\">this is likely an unknown simulation ID</i>';\n    });\n}\n\nserviceWorker.unregister();\n"],"sourceRoot":""}